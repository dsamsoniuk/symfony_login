security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # encoders:
        # Symfony\Component\Security\Core\User\User: plaintext
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
        # in_memory: 
        #     memory:
        #         users:
        #             damian:
        #                 password: aa
        #                 roles: 'ROLE_USER'
        #             admin:
        #                 password: a
        #                 roles: 'ROLE_ADMIN' 
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/login
            http_basic: ~
            provider: our_db_provider    
            form_login:
                login_path: login
                check_path: login
        # main:
        #     anonymous: ~
        #     http_basic: ~
        #     form_login:
        #         login_path: login
        #         check_path: login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN  }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
